{"version":3,"sources":["components/SearchComponent.js","components/Title.js","components/BookComponent.js","BooksAPI.js","components/HomeComponent.js","App.js","reportWebVitals.js","index.js"],"names":["SearchBooks","className","to","type","placeholder","Title","props","heading","Book","style","width","height","backgroundImage","book","imageLinks","thumbnail","movebook","rstate","shelf","title","authors","List","onChange","value","disabled","BookComponent","books","map","id","api","token","localStorage","Math","random","toString","substr","headers","ListBooks","bind","state","status","this","filter","fetch","then","res","json","data","setState","getbooks","e","paretn","target","parentNode","nextElementSibling","innerText","currentlyReading","separator","wantToRead","read","React","Component","BooksApp","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1501ba88.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst SearchBooks = () => {\r\n  return (\r\n    <div className=\"search-books\">\r\n            <div className=\"search-books-bar\">\r\n            <Link to =\"/\"><button className=\"close-search\">Close</button></Link>\r\n              <div className=\"search-books-input-wrapper\">\r\n                <input type=\"text\" placeholder=\"Search by title or author\"/>\r\n              </div>\r\n            </div>\r\n            <div className=\"search-books-results\">\r\n              <ol className=\"books-grid\"></ol>\r\n            </div>\r\n          </div>\r\n  )\r\n}\r\n\r\nexport default SearchBooks;","import React from 'react';\r\n\r\nconst Title = props => {\r\n\treturn (\r\n\t\t<div className=\"list-books-title\">\r\n\t\t\t<h1>{props.heading}</h1>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Title;","import React from 'react';\r\n\r\n//This section basically focus on main component of Book \r\nconst BookComponent = props => {\r\n\treturn (\r\n\t\t<div className=\"bookshelf\">\r\n\t\t\t<h2 className=\"bookshelf-title\">{props.title}</h2>\r\n\t\t\t<div className=\"bookshelf-books\">\r\n\t\t\t\t<ol className=\"books-grid\">\r\n\t\t\t\t\t{props.books.map(book => (\r\n\t\t\t\t\t\t<li key={book.id}>\r\n\t\t\t\t\t\t\t<Book book={book} movebook={props.movebook} />\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</ol>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\n//This section focus on book shelf, title of book and author name\r\nconst Book = props => {\r\n\treturn (\r\n\t\t<div className=\"book\">\r\n\t\t\t<div className=\"book-top\">\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName=\"book-cover\"\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\twidth: 150,\r\n\t\t\t\t\t\theight: 200,\r\n\t\t\t\t\t\tbackgroundImage: `url(${props.book.imageLinks.thumbnail})`\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t\t<div className=\"book-shelf-changer\">\r\n\t\t\t\t\t<List movebook={props.movebook} rstate={props.book.shelf} />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"book-title\">{props.book.title}</div>\r\n\t\t\t<div className=\"book-authors\">{props.book.authors}</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\n//This section helps the user to move wherever they want\r\nconst List = props => {\r\n\treturn(\r\n\t\t<select onChange={props.movebook} value={props.rstate}>\r\n\t\t\t<option value=\"move\" disabled>\r\n\t\t\t\tMove to...\r\n\t\t\t</option>\r\n\t\t\t<option value=\"currentlyReading\">Reading</option>\r\n\t\t\t<option value=\"wantToRead\">Like &#128077;</option>\r\n\t\t\t<option value=\"read\">Dislike &#128078;</option>\r\n\t\t\t<option value=\"none\">Delete &#128544;</option>\r\n\t\t</select>\r\n\t);\r\n};\r\n\r\nexport default BookComponent;","const api = \"https://reactnd-books-api.udacity.com\"\r\n\r\n// Generate a unique token for storing your bookshelf data on the backend server.\r\nlet token = localStorage.token\r\nif (!token)\r\n  token = localStorage.token = Math.random().toString(36).substr(-8)\r\n\r\nconst headers = {\r\n  'Accept': 'application/json',\r\n  'Authorization': token\r\n}\r\n\r\nexport const get = (bookId) =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.book)\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.books)\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ shelf })\r\n  }).then(res => res.json())\r\n\r\nexport const search = (query) =>\r\n  fetch(`${api}/search`, {\r\n    method: 'POST',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ query })\r\n  }).then(res => res.json())\r\n    .then(res =>{this.setState({list:res.books, total:res.books.length, value:\"all\"})})","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Title from './Title';\r\nimport BookComponent from './BookComponent';\r\nimport { getAll } from '../BooksAPI';\r\nclass ListBooks extends React.Component {\r\n\tmovebook = this.movebook.bind(this); //passing arguments based on user selection\r\n\r\n\tstate = {\r\n\t\tbooks: []\r\n\t};\r\n\r\n\tseparator(status) { //this function helps the user to store/shown the book in particular shelf\r\n\t\treturn this.state.books.filter(book => book.shelf === status);\r\n\t}\r\n\r\n\t//for finding the information of books from BooksAPI\r\n\tgetbooks() {\r\n\t\t\r\n\t\tgetAll().then(data => {\r\n\t\t\tthis.setState({\r\n\t\t\t\tbooks: data\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\t\r\n\tcomponentDidMount() { //helps to rendered all the data of books to the DOM\r\n\t\tthis.getbooks();\r\n\t}\r\n\r\n\t//Based on the user selection we need to move the books to read, like or dislike.\r\n\tmovebook(e) {\r\n\t\tlet paretn = e.target.parentNode.parentNode.nextElementSibling;\r\n\t\tlet m = this.state.books.filter(book => book.title === paretn.innerText);\r\n\t\tm[0].shelf = e.target.value;\r\n\t\tthis.setState({\r\n\t\t\tbooks:this.state.books\r\n\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst currentlyReading = this.separator('currentlyReading');\r\n\t\tconst wantToRead = this.separator('wantToRead');\r\n\t\tconst read = this.separator('read');\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<div className=\"list-books\">\r\n\t\t\t\t\t<Title heading=\"ProBook\" />\r\n\t\t\t\t\t<div className=\"list-books-content\">\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<BookComponent\r\n\t\t\t\t\t\t\t\ttitle=\"Reading\"\r\n\t\t\t\t\t\t\t\tbooks={currentlyReading}\r\n\t\t\t\t\t\t\t\tmovebook={this.movebook}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<BookComponent\r\n\t\t\t\t\t\t\t\ttitle=\"Like\"\r\n\t\t\t\t\t\t\t\tbooks={wantToRead}\r\n\t\t\t\t\t\t\t\tmovebook={this.movebook}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<BookComponent\r\n\t\t\t\t\t\t\t\ttitle=\"Dislike\"\r\n\t\t\t\t\t\t\t\tbooks={read}\r\n\t\t\t\t\t\t\t\tmovebook={this.movebook}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"open-search\">\r\n\t\t\t\t\t\t<Link to=\"/search\">\r\n\t\t\t\t\t\t\t<button>Add a book</button>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default ListBooks;","import React from 'react';\nimport SearchBooks from './components/SearchComponent';\nimport ListBooks from './components/HomeComponent';\n// import * as BooksAPI from './BooksAPI'\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nclass BooksApp extends React.Component {\n\n\n\trender() {\n\t\treturn(\n\t\t\t<Router>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path=\"/\" component={ListBooks}/>\n\t\t\t\t\t<Route exact path=\"/search\" component={SearchBooks}/>\n\t\t\t\t</Switch>\n\t\t\t</Router>\n\t\t)\n\t}\n}\n\nexport default BooksApp;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}